import { ServerConfig } from '../types/api';
export interface EnvConfig {
    NODE_ENV: 'development' | 'production' | 'test';
    PORT: number;
    HOST: string;
    DATABASE_URL: string;
    DATABASE_MAX_CONNECTIONS: number;
    DATABASE_CONNECTION_TIMEOUT: number;
    DATABASE_QUERY_TIMEOUT: number;
    DATABASE_IDLE_TIMEOUT: number;
    DATABASE_MAX_RETRIES: number;
    JWT_SECRET: string;
    JWT_EXPIRES_IN: string;
    BCRYPT_SALT_ROUNDS: number;
    ALLOWED_ORIGINS: string[];
    CORS_CREDENTIALS: boolean;
    CORS_MAX_AGE: number;
    RATE_LIMIT_WINDOW_MS: number;
    RATE_LIMIT_MAX_REQUESTS: number;
    RATE_LIMIT_SKIP_SUCCESSFUL: boolean;
    LOG_LEVEL: 'error' | 'warn' | 'info' | 'debug';
    ENABLE_REQUEST_LOGGING: boolean;
    ENABLE_STRUCTURED_LOGGING: boolean;
    MAX_FILE_SIZE: number;
    ALLOWED_FILE_TYPES: string[];
    UPLOAD_PATH: string;
    NANOBANANA_API_KEY: string;
    NANOBANANA_API_URL: string;
    NANOBANANA_MODEL: string;
    REDIS_URL?: string;
    REDIS_PASSWORD?: string;
    REDIS_DB?: number;
    ENABLE_METRICS: boolean;
    ENABLE_HEALTH_CHECKS: boolean;
    HEALTH_CHECK_INTERVAL_MS: number;
    WEBHOOK_URL?: string;
    WEBHOOK_SECRET?: string;
    WEBHOOK_RETRY_ATTEMPTS: number;
    ENABLE_BATCH_PROCESSING: boolean;
    ENABLE_WEBSOCKETS: boolean;
    ENABLE_API_DOCS: boolean;
    ENABLE_DEBUG_LOGS: boolean;
}
export declare const loadEnvConfig: () => EnvConfig;
export declare const validateEnvConfig: (config: EnvConfig) => {
    isValid: boolean;
    errors: string[];
    warnings: string[];
};
export declare const createServerConfig: (envConfig: EnvConfig) => ServerConfig;
export declare const getDatabaseConfig: (envConfig: EnvConfig) => {
    url: string;
    maxConnections: number;
    connectionTimeoutMs: number;
    queryTimeoutMs: number;
    idleTimeoutMs: number;
    maxRetries: number;
    enableLogging: boolean;
    enableSlowQueryLogging: boolean;
    slowQueryThresholdMs: number;
};
export declare const ENV_CONFIG: EnvConfig;
export declare const SERVER_CONFIG: ServerConfig;
export declare const DATABASE_CONFIG: {
    url: string;
    maxConnections: number;
    connectionTimeoutMs: number;
    queryTimeoutMs: number;
    idleTimeoutMs: number;
    maxRetries: number;
    enableLogging: boolean;
    enableSlowQueryLogging: boolean;
    slowQueryThresholdMs: number;
};
export declare const isProduction: () => boolean;
export declare const isDevelopment: () => boolean;
export declare const isTest: () => boolean;
export default ENV_CONFIG;
//# sourceMappingURL=env.d.ts.map